% FRE6811_Lecture_2

% Define knitr options
% !Rnw weave = knitr
% Set global chunk options
<<knitr_setup,include=FALSE,cache=FALSE>>=
library(knitr)
opts_chunk$set(prompt=TRUE, comment=NA, highlight=FALSE, message=FALSE, warning=FALSE, size='scriptsize', fig.width=6, fig.height=5)
options(width=60, dev='pdf')
thm <- knit_theme$get("acid")
knit_theme$set(thm)
@


% Define document options
\documentclass[10pt]{beamer}
\mode<presentation>
\usetheme{AnnArbor}
% \usecolortheme{whale}
% Uncover everything in a step-wise fashion
% \beamerdefaultoverlayspecification{<+->}
% amsmath package for math symbols
% \usepackage{amsmath}
\usepackage[latin1]{inputenc}
\usepackage{hyperref}
\usepackage{fancybox}
\usepackage{url}
\usepackage[backend=bibtex,style=alphabetic]{biblatex} % bibstyle=numeric
% \bibliographystyle{amsalpha} % doesn't work
\addbibresource{FRE6811_bib.bib}
% \addbibresource[location=remote]{http://www.citeulike.org/user/jerzyp}
\renewcommand\bibfont{\footnotesize}
\renewcommand{\pgfuseimage}[1]{\scalebox{0.75}{\includegraphics{#1}}} % scale bib icons
\setbeamertemplate{bibliography item}[text] % set bib icons
% \setbeamertemplate{bibliography item}{} % remove bib icons

% \usepackage{enumerate}
% \let\emph\textbf
% \let\alert\textbf
% Define colors for hyperlinks
\definecolor{links}{HTML}{2A1B81}
\hypersetup{colorlinks=true,linkcolor=,urlcolor=links}
% Make url text footnotesize
\renewcommand\UrlFont{\footnotesize}
% Make institute text italic and small
\setbeamerfont{institute}{size=\small,shape=\itshape,bg=red,fg=red}
\setbeamerfont{date}{size=\small}
\setbeamerfont{block title}{size=\normalsize} % shape=\itshape
\setbeamerfont{block body}{size=\footnotesize}


% Title page setup
\title[FRE6811 Lecture\#5]{FRE6811 Financial Software Laboratory}
\subtitle{Lecture\#5, Spring 2014}
% \subject{Getting Started With R}
\institute[NYU Polytechnic]{NYU Polytechnic School of Engineering}
\titlegraphic{\includegraphics[scale=0.8]{engineering_long_color}}
\author{Jerzy Pawlowski}
% \email{jp3900@poly.edu}
\date{February 24, 2014}
% \date{\today}
% \pgfdeclareimage[height=0.5cm]{university-logo}{engineering_long_white}
% \logo{\pgfuseimage{engineering_long_white}}


%%%%%%%%%%%%%%%
\begin{document}


%%%%%%%%%%%%%%%
\maketitle


%%%%%%%%%%%%%%%
% \begin{frame}[t]{Outline}
% You might wish to add the option [pausesections]
%   \tableofcontents
% \end{frame}


%%%%%%%%%%%%%%%
\section{Time Series Objects}


%%%%%%%%%%%%%%%
\subsection{Date and Time Classes}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.3\textwidth}
      The \texttt{Date} class from the \texttt{base} package is suitable for \emph{daily} time series,
      \vskip1ex
      The \texttt{POSIXct} class from the \texttt{base} package is suitable for \emph{intra-day} time series,
      \vskip1ex
      The \texttt{yearmon} and  \texttt{yearqtr} classes from the \texttt{zoo} package are suitable for \emph{quarterly} and \emph{monthly} time series,
    \column{0.7\textwidth}
      \vspace{-3em}
      <<echo=3:30,tidy=FALSE>>=
rm(list=ls())
library(zoo)  # load package zoo
my.date <- Sys.Date()  # create date series of class 'Date'
daily.index <- my.date + 0:365  # daily series over one year
head(daily.index, 4)  # print first few dates
format(head(daily.index, 4), "%m/%d/%Y")  # print first few dates
# create daily date and time series of class 'POSIXct'
daily.index <- seq(Sys.time(), by="days", length.out=365)
head(daily.index, 4)  # print first few dates
format(head(daily.index, 4), "%m/%d/%Y %H:%M:%S")  # print first few dates
# create series of monthly dates of class 'zoo'
monthly.index <- yearmon(2010+0:36/12)
head(monthly.index, 4)  # print first few dates
# create series of quarterly dates of class 'zoo'
qrtly.index <- yearqtr(2010+0:16/4)
head(qrtly.index, 4)  # print first few dates
# convert quarterly 'zoo' dates to POSIXct
Sys.setenv(tz="UTC")
as.POSIXct(head(qrtly.index, 4))
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Operations on \texttt{zoo} Objects}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      The function \texttt{coredata()} extracts the data contained in \texttt{zoo} object, and returns a vector or matrix,
      \vskip1ex
      The function \texttt{index()} extracts the time index of a \texttt{zoo} object,
      \vskip1ex
      The functions \texttt{start()} and \texttt{end()} return the time index values of the first and last elements of a \texttt{zoo} object,
      \vskip1ex
      The functions \texttt{cumsum()}, \texttt{cummax()}, and \texttt{cummin()} return cumulative sums, minima and maxima of a \texttt{zoo} object,
    \column{0.6\textwidth}
      \vspace{-2em}
      <<echo=3:30,tidy=FALSE>>=
rm(list=ls())
library(zoo)  # load package zoo
# create zoo time series
daily.index <- Sys.Date() + 0:3
zoo.ts <- zoo(rnorm(length(daily.index)), 
               order.by=daily.index)
zoo.ts
index(zoo.ts)  # extract time index
coredata(zoo.ts)  # extract coredata
zoo.ts[start(zoo.ts)]  # first element
zoo.ts[end(zoo.ts)]  # last element
coredata(zoo.ts) <- rep(1, 4)  # replace coredata
cumsum(zoo.ts)  # cumulative sum
cummax(cumsum(zoo.ts))
cummin(cumsum(zoo.ts))
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{The \texttt{lag()} and \texttt{diff()} Functions}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      The function \texttt{lag()} returns a lagged version of a time series, shifting the time index back by a given number of observations,
      \vskip1ex
      The function \texttt{diff()} returns the difference between a time series and its lagged version, 
      \vskip1ex
      For \texttt{zoo} objects, both these functions omit any \texttt{NA} values they may have produced,
    \column{0.6\textwidth}
      \vspace{-1em}
      <<echo=2:30,tidy=FALSE>>=
library(zoo)  # load package zoo
coredata(zoo.ts) <- 1:4  # replace coredata
zoo.ts
diff(zoo.ts)  # diff with one day lag
lag(zoo.ts, 2)  # two day lag
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Sequential Joining \texttt{zoo} Objects}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      \texttt{zoo} time series can be joined sequentially using \texttt{rbind},
      <<zoo_join_seq,echo=7:30,tidy=FALSE,fig.show='hide'>>=
rm(list=ls())
set.seed(1121)  # initialize the random number generator
par(oma=c(1, 1, 1, 1))  # set outer margins
par(mgp=c(2, 1, 0))  # set axis title and labels
par(mar=c(5, 1, 1, 1))  # set plot margins
par(cex.lab=0.8,  # set font scales
    cex.axis=0.8, cex.main=0.8, cex.sub=0.5)
library(zoo)  # load package zoo
# create daily date series of class 'Date'
daily.index1 <- Sys.Date() + 0:365
# create zoo time series
zoo.ts1 <- zoo(rnorm(length(daily.index1)), 
                 order.by=daily.index1)
# create another zoo time series
daily.index2 <- Sys.Date() + 365:730
zoo.ts2 <- zoo(rnorm(length(daily.index2)), 
                 order.by=daily.index2)
# rbind the two time series
zoo.ts3 <- rbind(zoo.ts1,  # ts1 supersedes ts2
                 zoo.ts2[index(zoo.ts2) > 
                           end(zoo.ts1)])
plot(cumsum(zoo.ts3), xlab="", ylab="")
# add vertical line at stitch point
abline(v=index(tail(zoo.ts1, 1)), col="red", lty="dashed")
title(main="Random Prices", line=-1)  # add title
      @
    \column{0.5\textwidth}
      \vspace{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/zoo_join_seq}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Merging \texttt{zoo} Objects}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.3\textwidth}
      \texttt{zoo} time series can be combined concurrently by joining their columns using \texttt{merge()},
      \vskip1ex
      If \texttt{all=TRUE}, then \texttt{merge()} uses the union of their dates, otherwise it uses their intersection,
      \vskip1ex
      The \texttt{merge()} operation can produce \texttt{NA} values,
      \vskip1ex
      \texttt{merge()} is similar to \texttt{cbind()},
    \column{0.7\textwidth}
      \vspace{-2em}
      <<echo=2:30,tidy=FALSE>>=
rm(list=ls())
# create daily date series of class 'Date'
daily.index1 <- Sys.Date() + -3:1
# create zoo time series
zoo.ts1 <- zoo(rnorm(length(daily.index1)), 
               order.by=daily.index1)
# create another zoo time series
daily.index2 <- Sys.Date() + -1:3
zoo.ts2 <- zoo(rnorm(length(daily.index2)), 
               order.by=daily.index2)
merge(zoo.ts1, zoo.ts2)  # union of dates
merge(zoo.ts1, zoo.ts2, all=FALSE)  # intersection of dates
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Managing \texttt{NA} Values}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      Operations on time series can produce \texttt{NA} values,
      \vskip1ex
      There are two dedicated functions for managing \texttt{NA} values in time series: 
      \begin{itemize}[]
        \item \texttt{na.omit()} removes observations containing \texttt{NA} values,
        \item \texttt{na.locf()} carries the last non-\texttt{NA} observation forward,
      \end{itemize}
    \column{0.6\textwidth}
      \vspace{-1em}
      <<echo=3:30,tidy=FALSE>>=
rm(list=ls())
library(zoo)  # load package zoo
# create zoo time series
zoo.ts <- zoo(rnorm(4), order.by=(Sys.Date() + 0:3))
zoo.ts[3] <- NA
zoo.ts

na.locf(zoo.ts)  # replace NA's using locf

na.omit(zoo.ts)  # remove NA's using omit
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Aggregating \texttt{zoo} Objects}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      The function \texttt{aggregate()} performs temporal aggregations of \texttt{zoo} objects,
      <<zoo_agg,echo=8:30,tidy=FALSE,fig.show='hide'>>=
rm(list=ls())
set.seed(1121)  # initialize the random number generator
par(oma=c(1, 1, 1, 1))  # set outer margins
par(mgp=c(2, 1, 0))  # set axis title and labels
par(mar=c(5, 1, 1, 1))  # set plot margins
par(cex.lab=0.8,  # set font scales
    cex.axis=0.8, cex.main=0.8, cex.sub=0.5)
library(zoo)  # load package zoo
# create zoo time series
daily.index <- Sys.Date() + 0:365
zoo.ts <- zoo(rnorm(length(daily.index)), 
                 order.by=daily.index)
# create monthly dates
dates.agg <- as.Date(as.yearmon(index(zoo.ts)))
# perform monthly 'mean' aggregation
zoo.agg <- aggregate(zoo.ts, by=dates.agg, 
                     FUN=mean)
# merge with original zoo - union of dates
zoo.agg <- merge(zoo.ts, zoo.agg)
# replace NA's using locf
zoo.agg <- na.locf(zoo.agg)
# extract aggregated zoo
zoo.agg <- zoo.agg[index(zoo.ts), 2]
# plot original and aggregated zoo
plot(cumsum(zoo.ts), xlab="", ylab="")
lines(cumsum(zoo.agg), lwd=2, col="red")
# add legend
legend("topright", inset=0.15, title="Aggregated Prices", 
       leg=c("orig prices", "agg prices"), lwd=2, 
       col=c("black", "red"))
      @
    \column{0.5\textwidth}
      \vspace{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/zoo_agg}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Interpolating \texttt{zoo} Objects}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      The package \texttt{zoo} has two functions for replacing \texttt{NA} values using interpolation:
      \begin{itemize}[]
        \item \texttt{na.approx()} performs linear interpolation,
        \item \texttt{na.spline()} performs spline interpolation,
      \end{itemize}
      \vspace{-1em}
      <<zoo_interpol,echo=6:30,tidy=FALSE,fig.show='hide'>>=
set.seed(1121)  # initialize the random number generator
par(oma=c(1, 1, 1, 1))  # set outer margins
par(mgp=c(2, 1, 0))  # set axis title and labels
par(mar=c(5, 1, 1, 1))  # set plot margins
par(cex.lab=0.8,  # set font scales
    cex.axis=0.8, cex.main=0.8, cex.sub=0.5)
# perform monthly 'mean' aggregation
zoo.agg <- aggregate(zoo.ts, by=dates.agg, 
                     FUN=mean)
# merge with original zoo - union of dates
zoo.agg <- merge(zoo.ts, zoo.agg)
# replace NA's using linear interpolation
zoo.agg <- na.approx(zoo.agg)
# extract interpolated zoo
zoo.agg <- zoo.agg[index(zoo.ts), 2]
# plot original and interpolated zoo
plot(cumsum(zoo.ts), xlab="", ylab="")
lines(cumsum(zoo.agg), lwd=2, col="red")
# add legend
legend("topright", inset=0.15, title="Interpolated Prices", 
       leg=c("orig prices", "interpol prices"), lwd=2, 
       col=c("black", "red"))
      @
    \column{0.5\textwidth}
      \vspace{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/zoo_interpol}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Rolling Functions on \texttt{zoo} Objects}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      The package \texttt{zoo} has several functions for rolling calculations:
      \begin{itemize}[]
        \item \texttt{rollapply()} applying function to rolling margins,
        \item \texttt{rollmean()} calculate rolling means,
        \item \texttt{rollmedian()} calculate rolling median,
        \item \texttt{rollmax()} calculate rolling max,
      \end{itemize}
      \vspace{-1em}
      <<zoo_roll,echo=6:30,tidy=FALSE,fig.show='hide'>>=
set.seed(1121)  # initialize the random number generator
par(oma=c(1, 1, 1, 1))  # set outer margins
par(mgp=c(2, 1, 0))  # set axis title and labels
par(mar=c(5, 1, 1, 1))  # set plot margins
par(cex.lab=0.8,  # set font scales
    cex.axis=0.8, cex.main=0.8, cex.sub=0.5)
# perform monthly 'mean' aggregation
zoo.mean <- rollapply(zoo.ts, width=11, FUN=mean)
# merge with original zoo - union of dates
zoo.mean <- merge(zoo.ts, zoo.mean)
# replace NA's using na.locf
zoo.mean <- na.locf(zoo.mean, fromLast=TRUE)
# extract mean zoo
zoo.mean <- zoo.mean[index(zoo.ts), 2]
# plot original and interpolated zoo
plot(cumsum(zoo.ts), xlab="", ylab="")
lines(cumsum(zoo.mean), lwd=2, col="red")
# add legend
legend("topright", inset=0.15, title="Mean Prices", 
       leg=c("orig prices", "mean prices"), lwd=2, 
       col=c("black", "red"))
      @
    \column{0.5\textwidth}
      \vspace{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/zoo_roll}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{\texttt{RQuantLib} Calendar Functions}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.3\textwidth}
      The package \texttt{RQuantLib} contains a large library of functions for pricing fixed-income instruments and options, and for risk management calculations,
      \vskip1ex
      The package \texttt{RQuantLib} contains calendar functions for determining holidays and business days in many different jurisdictions,
    \column{0.7\textwidth}
      \vspace{-2em}
      <<echo=3:30,tidy=FALSE>>=
rm(list=ls())
library(zoo)  # load zoo
library(RQuantLib)  # load RQuantLib
# create daily date series of class 'Date'
daily.index <- Sys.Date() + -5:2
daily.index
# create logical vector of business days
bus.days <- isBusinessDay(  # RQuantLib calendar
  calendar="UnitedStates/GovernmentBond", daily.index)
# create daily series of business days
bus.index <- daily.index[bus.days]
bus.index
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Package \texttt{tseries} for Time Series Analysis}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      \vspace{-2em}
      <<tseries_intro,echo=6:30,tidy=FALSE,fig.show='hide'>>=
set.seed(1121)  # initialize the random number generator
par(oma=c(1, 1, 1, 1))  # set outer margins
par(mgp=c(2, 1, 0))  # set axis title and labels
par(mar=c(5, 1, 1, 1))  # set plot margins
par(cex.lab=0.8,  # set font scales
    cex.axis=0.8, cex.main=0.8, cex.sub=0.5)
library(tseries)  # load package tseries
suppressWarnings(
  zoo.msft <- get.hist.quote(instrument="MSFT", 
                           start="2013-01-01", 
                           end=Sys.Date(), 
                           origin="1970-01-01")
  )  # end suppressWarnings
class(zoo.msft)
dim(zoo.msft)
tail(zoo.msft, 4)

sharpe(zoo.msft[, "Close"], r=0.01)  # calculate Sharpe ratio

plot(zoo.msft[, "Close"], xlab="", ylab="")
title(main="MSFT Close Prices", line=-1)  # add title
      @
    \column{0.5\textwidth}
      \vspace{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/tseries_intro}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Time Series Classes in $R$}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      $R$ has a number of different time series classes:
      \begin{itemize}[]
        \item Class \texttt{ts} from base package \texttt{stats},
        \item Class \texttt{zoo} ordered observations,
        \item Class \texttt{xts} extension of \texttt{zoo} class,
        \item Class \texttt{timeSeries} from the \emph{Rmetrics} suite,
      \end{itemize}
    \column{0.6\textwidth}
      \vspace{-2em}
      <<echo=1:30,tidy=FALSE>>=
ts.msft <- as.ts(zoo.msft)
class(ts.msft)
# rename colnames
colnames(ts.msft) <- paste0("MSFT.", colnames(ts.msft))
tail(ts.msft, 4)

library(timeSeries)
tser.msft <- as.timeSeries(zoo.msft)
class(ts.msft)
tail(tser.msft, 4)
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\section{Plotting Using Package \texttt{ggplot2}}


%%%%%%%%%%%%%%%
\subsection{Plotting \texttt{zoo} Time Series Using \texttt{ggplot2}}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      \vspace{-2em}
      <<quantlib_plot,echo=3:30,tidy=FALSE,fig.width=6,fig.height=7,fig.show='hide'>>=
rm(list=ls())
library(zoo)  # load zoo
library(ggplot2)  # load ggplot2
library(gridExtra)
# coerce to zoo
zoo.eustx <- as.zoo(EuStockMarkets)
# coerce index into class 'Dates'
index(zoo.eustx) <- 
  as.Date(365*(index(zoo.eustx)-1970))
# plot ggplot2 in single pane
ggp.zoo1 <- autoplot(zoo.eustx, main="Eu Stox", 
         facets=NULL) + xlab("") + 
  theme(legend.position=c(0.1, 0.5), 
  plot.title=element_text(vjust=-2.0), 
  plot.margin=unit(c(-0.5, 0.0, -0.5, 0.0), "cm"), 
  plot.background=element_blank(),
  axis.text.y=element_blank()
  )
# plot ggplot2 in multiple panes
ggp.zoo2 <- autoplot(zoo.eustx, main="Eu Stox", 
         facets=Series ~ .) + xlab("") + 
  theme(legend.position=c(0.1, 0.5), 
  plot.title=element_text(vjust=-2.0), 
  plot.margin=unit(c(-0.5, 0.0, -0.5, 0.0), "cm"), 
  plot.background=element_blank(),
  axis.text.y=element_blank()
  )
# create plot ggplot2 in multiple panes
grid.arrange(ggp.zoo1, ggp.zoo2, ncol=1)
      @
    \column{0.5\textwidth}
      \vspace{-1em}
      \hspace*{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/quantlib_plot}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\section{Object-Oriented Programming in $R$}


%%%%%%%%%%%%%%%
\subsection{The \texttt{S3} Object-Oriented Programming System in $R$}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      \vspace{-1em}
      \texttt{S3} is a popular object oriented (OO) programming system in $R$, based on the $R$ class system and on \emph{generic functions},
      \vskip1ex
      Generic functions have different \emph{methods} that are dispatched depending on the \emph{class} of the object,
      \vskip1ex
      The actual function that is executed is determined by the class of the object on which the generic function is called,
      \vskip1ex
      The different versions of a generic function are called \emph{methods},
      \vskip1ex
      For example \texttt{plot()} and \texttt{cbind()} are generic functions,
      \vskip1ex
      Generic function methods follow the naming convention \texttt{generic.class()},
      \vskip1ex
      The generic function \texttt{cbind()} has many \emph{methods} with names \texttt{cbind.*()},
      \vskip1ex
      The \texttt{cbind()} method dispatched to \texttt{zoo} objects is called \texttt{cbind.zoo()},
    \column{0.6\textwidth}
      \vspace{-1em}
      <<echo=2:30,tidy=FALSE>>=
rm(list=ls())
# get all methods of generic function "cbind"
tail(methods("cbind"))

# show method of "cbind" applied to "zoo" objects
cbind.zoo

# get generic function methods applied to "zoo" objects
methods(class = "zoo")[5:10]
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Creating New Classes and Methods}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      A new $R$ class can be created by simply assigning to the \texttt{class} attribute,
      \vskip1ex
      Then new \emph{methods} can be defined, and $R$ will automatically dispatch them to objects of the new \emph{class},
    \column{0.6\textwidth}
      \vspace{-1em}
      <<echo=2:30,tidy=FALSE>>=
rm(list=ls())
my.ts <- zoo(rnorm(4), order.by=(Sys.Date() + 0:3))
class(my.ts)
length(my.ts)

# coerce "zoo" object to new class "newts"
class(my.ts) <- "newts"
class(my.ts)

# define "length" method for class "newts"
length.newts <- function(in.ts) {
# "length" method for class" "newts"
  cat("getting length of object from newts class\n")
  length(unclass(in.ts))
}  # end length.newts

# apply new "length" method
length(my.ts)
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Homework Assignment}
\begin{frame}[t]{\subsecname}

\begin{block}{Required}
  \begin{itemize}[]
    \item Download the \texttt{zoo} Quickref manual from CRAN, and read how to query the Oanda database,
    \item Download from Yahoo the EOD CLOSE quotes for \texttt{MSFT} stock, starting from Jan/01/2013,
    \item Download from Oanda the EOD CLOSE quotes for \texttt{eur} currency, starting from Jan/01/2013,
    \item Smooth each time series using \texttt{rollmean()} over an 11 period window,
    \item Replace \texttt{NA} values using \texttt{na.locf()},
    \item Plot each time series combined with its smoothed version,
    \item Bind the two original time series together using \texttt{merge()},
    \item Remove observations containing \texttt{NA} values,
    \item Plot the \texttt{MSFT} stock and \texttt{eur} currency time series together,
  \end{itemize}
\end{block}
\pause

\begin{block}{Recommended}
  \begin{itemize}[]
    \item Read chapters 9, 10, 13: \fullcite{website:rintro}
  \end{itemize}
\end{block}

\end{frame}


\end{document}
