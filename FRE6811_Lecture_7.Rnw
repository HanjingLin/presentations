% FRE6811_Lecture_7

% Define knitr options
% !Rnw weave = knitr
% Set global chunk options
<<knitr_setup,include=FALSE,cache=FALSE>>=
library(knitr)
opts_chunk$set(prompt=TRUE, comment=NA, highlight=FALSE, message=FALSE, warning=FALSE, size='scriptsize', fig.width=6, fig.height=5)
options(width=60, dev='pdf')
thm <- knit_theme$get("acid")
knit_theme$set(thm)
@


% Define document options
\documentclass[10pt]{beamer}
\mode<presentation>
\usetheme{AnnArbor}
% \usecolortheme{whale}
% Uncover everything in a step-wise fashion
% \beamerdefaultoverlayspecification{<+->}
% amsmath package for math symbols
\usepackage{amsmath}
\usepackage[latin1]{inputenc}
\usepackage{hyperref}
\usepackage{fancybox}
\usepackage{url}
\usepackage[backend=bibtex,style=alphabetic]{biblatex} % bibstyle=numeric
% \bibliographystyle{amsalpha} % doesn't work
\addbibresource{FRE6811_bib.bib}
% \addbibresource[location=remote]{http://www.citeulike.org/user/jerzyp}
\renewcommand\bibfont{\footnotesize}
\renewcommand{\pgfuseimage}[1]{\scalebox{0.75}{\includegraphics{#1}}} % scale bib icons
\setbeamertemplate{bibliography item}[text] % set bib icons
% \setbeamertemplate{bibliography item}{} % remove bib icons

% \usepackage{enumerate}
% \let\emph\textbf
% \let\alert\textbf
% Define colors for hyperlinks
\definecolor{links}{HTML}{2A1B81}
\hypersetup{colorlinks=true,linkcolor=,urlcolor=links}
% Make url text footnotesize
\renewcommand\UrlFont{\footnotesize}
% Make institute text italic and small
\setbeamerfont{institute}{size=\small,shape=\itshape,bg=red,fg=red}
\setbeamerfont{date}{size=\small}
\setbeamerfont{block title}{size=\normalsize} % shape=\itshape
\setbeamerfont{block body}{size=\footnotesize}


% Title page setup
\title[FRE6811 Lecture\#7]{FRE6811 Financial Software Laboratory}
\subtitle{Lecture\#7, Spring 2014}
% \subject{Getting Started With R}
\institute[NYU Polytechnic]{NYU Polytechnic School of Engineering}
\titlegraphic{\includegraphics[scale=0.8]{engineering_long_color}}
\author{Jerzy Pawlowski}
% \email{jp3900@poly.edu}
\date{March 10, 2014}
% \date{\today}
% \pgfdeclareimage[height=0.5cm]{university-logo}{engineering_long_white}
% \logo{\pgfuseimage{engineering_long_white}}


%%%%%%%%%%%%%%%
\begin{document}


%%%%%%%%%%%%%%%
\maketitle


%%%%%%%%%%%%%%%
\section{Univariate Statistical Models}


%%%%%%%%%%%%%%%
\subsection{Improved Autocorrelation Function}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      \vspace{-1em}
      The function \texttt{acf()} from the base package \texttt{stats} returns the lag-zero autocorrelation,
      \vskip1ex
      We can easily create a wrapper function for \texttt{acf()} that omits the lag-zero autocorrelation,
      <<echo=7:30,tidy=FALSE>>=
# calculate DAX percentage returns
ts.dax <- diff(log(EuStockMarkets[, 1]))
library(zoo)  # load zoo
library(ggplot2)  # load ggplot2
library(gridExtra)  # load gridExtra
library(forecast)  # load forecast
# autocorrelation from "stats"
acf.dax <- acf(ts.dax, plot=FALSE)
str(acf.dax)  # get the structure of the "acf" object
dim(acf.dax$acf)
dim(acf.dax$lag)
head(acf.dax$acf)
      @
    \column{0.5\textwidth}
      \vspace{-1em}
      If a return value is wrapped in the function \texttt{invisible()} then it isn't printed automatically when the function is called,
      <<echo=1:30,tidy=FALSE>>=
my.acf <- function (ts.data, xlab, 
                    ylab, main, ...)
# wrapper for base acf()
{
  acf.data <- acf(x=ts.data, plot=FALSE, ...)
  acf.data$acf <-  # remove first element
    array(data=acf.data$acf[-1], 
          dim=c(dim(acf.data$acf)[1]-1,1,1))
  acf.data$lag <-  # remove first element
    array(data=acf.data$lag[-1], 
          dim=c(dim(acf.data$lag)[1]-1,1,1))
  plot(acf.data, xlab=xlab, ylab=ylab, 
       main=main)
  return(invisible(acf.data))
}  # end my.acf
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{U.S. Macroeconomic Data}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      \vspace{-1em}
      The package \texttt{Ecdat} contains the \texttt{Macrodat} U.S. macroeconomic data,
      \vskip1ex
      "\texttt{lhur}" is the unemployment rate (average of months in quarter),
      \vskip1ex
      "\texttt{fygm3}" 3 month treasury bill interest rate (last month in quarter)
      <<macro_data,echo=1:30,tidy=FALSE,fig.show='hide'>>=
library(Ecdat)  # load Ecdat
colnames(Macrodat)  # United States Macroeconomic Time Series
zoo.macro <- as.zoo(  # coerce to "zoo"
          Macrodat[, c("lhur", "fygm3")])
colnames(zoo.macro) <- c("unemprate", "3mTbill")
# ggplot2 in multiple panes
autoplot(  # generic ggplot2 for "zoo"
  object=zoo.macro, main="US Macro",
  facets=Series ~ .
  ) + xlab("") + # end autoplot
theme(  # modify plot theme
  legend.position=c(0.1, 0.5),
  plot.title=element_text(vjust=-2.0),
  plot.margin=unit(c(-0.5, 0.0, -0.5, 0.0), "cm"),
  plot.background=element_blank(),
  axis.text.y=element_blank()
)  # end theme
      @
    \column{0.5\textwidth}
      \vspace{-1em}
      \hspace*{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/macro_data}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Autocorrelation in Macroeconomic Data}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      Many examples of economic data display a high degree of autocorrelation,
      <<macro_corr,echo=2:30,fig.height=8,tidy=FALSE,fig.show='hide'>>=
par(mfrow=c(2,1))  # set plot panels
diff.macro <- na.omit(diff(zoo.macro))

acf.unemprate <- 
  my.acf(diff.macro[, "unemprate"], lag.max=10,
  xlab="", ylab="",
  main="average quarterly unemployment rate")

acf.3mTbill <- 
  my.acf(diff.macro[, "3mTbill"], lag.max=10,
  xlab="", ylab="",
  main="3 month T-bill EOQ")
      @
    \column{0.5\textwidth}
      \vspace{-2em}
      \hspace*{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/macro_corr}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Ljung-Box Test of Autocorrelation}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      The \emph{Ljung-Box} tests the \emph{null hypothesis} that autocorrelations are equal to zero,
      \vskip1ex
      The test statistic is:
      \begin{displaymath}
        Q = n(n+2) \sum_{k=1}^{maxlag} \frac{{\hat\rho}_{k}^2}{n-k}
      \end{displaymath}
      Where $n$ is the sample size, and the ${\hat\rho}_{k}$ are sample autocorrelations,
      \vskip1ex
      The \emph{Ljung-Box} statistic follows the \emph{chi-squared} distribution with \emph{maxlag} degrees of freedom,
      \vskip1ex
      The \emph{Ljung-Box} statistic is small for uncorrelated time series,
      \vskip1ex
      The \emph{p}-value for DAX returns is large, and we conclude that the \emph{null hypothesis} is TRUE, and the DAX returns are uncorrelated,
      \vskip1ex
      The \emph{p}-value for changes in macro data is extremely small, and we conclude that the \emph{null hypothesis} is FALSE, and the macro data are are autocorrelated,
    \column{0.5\textwidth}
      \vspace{-1em}
      <<echo=2:30,tidy=FALSE>>=
# Ljung-Box test for DAX data
# 'lag' is the number of autocorrelation coefficients
Box.test(ts.dax, lag=10, type="Ljung")
# changes in unemployment rate are autocorrelated
Box.test(diff.macro[, "unemprate"], 
         lag=10, type="Ljung")
# changes in 3 month T-bill rate are autocorrelated
Box.test(diff.macro[, "3mTbill"], 
         lag=10, type="Ljung")
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Autoregressive Processes}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
      \column{0.5\textwidth}
      \vspace{-2em}
      An \emph{autoregressive} time series process is defined by the formula:
      \begin{displaymath}
        x_{i} = c + {\varphi}_{1} x_{i-1} + {\varphi}_{2} x_{i-2} + \ldots + {\varphi}_{p} x_{i-p} + {\varepsilon}_{i}
      \end{displaymath}
      Where the ${\varepsilon}_{i}$ are independent random variables with zero mean and constant variance,
      \vskip1ex
      The function \texttt{arima.sim()} simulates an ARIMA process,
      \vspace{-1em}
      <<ar_process,echo=4:30,fig.height=7,tidy=FALSE,fig.show='hide'>>=
# ARIMA processes
library(ggplot2)  # load ggplot2
library(gridExtra)  # load gridExtra
daily.index <- Sys.Date() + 0:999  # daily series over one year
zoo.ar <- zoo(  # AR time series of returns
  x=arima.sim(n=1000, model=list(ar=0.2)),
  order.by=daily.index)  # zoo.ar
zoo.ar <- cbind(zoo.ar, cumsum(zoo.ar))
colnames(zoo.ar) <- c("AR returns", "AR prices")
r1 <- range(zoo.ar[,1])
r2 <- range(zoo.ar[,2])
m.factor <- abs(r2[1]-r2[2])/abs(r1[1]-r1[2])
zoo.ar[,1] <- m.factor*zoo.ar[,1]
autoplot(object=zoo.ar, # plot AR returns
  main="Autoregressive process (phi=0.2)", 
  facets=Series ~ .) + xlab("") + ylab("") + 
theme(legend.position=c(0.1, 0.5), 
  plot.title=element_text(vjust=-2.0), 
  plot.margin=unit(c(-0.5, 0.0, -0.5, 0.0), "cm"), 
  plot.background=element_blank(),
  axis.text.y=element_blank())
      @
    \column{0.5\textwidth}
      \vspace{-1em}
      \hspace*{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/ar_process}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Examples of Autoregressive Processes}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
      \column{0.5\textwidth}
      <<ar_param,echo=1:30,fig.height=7,tidy=FALSE,fig.show='hide'>>=
v.phis <- c(0.01, 0.4, 0.8)  # AR coefficients
zoo.ar <- sapply(  # create three AR time series
  v.phis, function(phi)
          arima.sim(n=1000, model=list(ar=phi)))
zoo.ar <- zoo(x=zoo.ar, order.by=daily.index)
zoo.ar <- cumsum(zoo.ar)  # returns to prices
colnames(zoo.ar) <- paste("autocorr", v.phis)
r1 <- range(zoo.ar[,1])
r2 <- range(zoo.ar[,2])
r3 <- range(zoo.ar[,3])
m.factor <- abs(r3[1]-r3[2])/abs(r1[1]-r1[2])
zoo.ar[,1] <- m.factor*zoo.ar[,1]
m.factor <- abs(r3[1]-r3[2])/abs(r2[1]-r2[2])
zoo.ar[,2] <- m.factor*zoo.ar[,2]
autoplot(zoo.ar, main="AR prices", 
         facets=Series ~ .) + xlab("") + 
theme(legend.position=c(0.1, 0.5), 
  plot.title=element_text(vjust=-2.0), 
  plot.margin=unit(c(-0.5, 0.0, -0.5, 0.0), "cm"), 
  plot.background=element_blank(),
  axis.text.y=element_blank())
      @
    \column{0.5\textwidth}
      \vspace{-1em}
      \hspace*{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/ar_param}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Autocorrelation in Autoregressive Processes}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      An \emph{autoregressive} process of order \emph{one} \emph{AR}(1) is defined by the formula:
      \begin{displaymath}
        x_{i} = c + {\varphi}_{1} x_{i-1} + {\varepsilon}_{i}
      \end{displaymath}
      An \emph{AR}(1) process has an exponentially declining ACF and a non-zero PACF at lag one,
      <<ar_acf,echo=2:30,fig.height=8,tidy=FALSE,fig.show='hide'>>=
par(mfrow=c(2,1))  # set plot panels
# ACF of AR(1) process
my.acf(na.omit(diff(zoo.ar[,3])), lag.max=10, 
       xlab="", ylab="", main="ACF of AR(1) process")

# PACF of AR(1) process
pacf(na.omit(diff(zoo.ar[,3])), lag.max=10,
     xlab="", ylab="", main="PACF of AR(1) process")
      @
    \column{0.5\textwidth}
      \vspace{-2em}
      \hspace*{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/ar_acf}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Identification of Autoregressive Processes}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      An \emph{AR}(3) process of order \emph{three} is defined by the formula:
      \begin{displaymath}
        x_{i} = c + {\varphi}_{1} x_{i-1} + {\varphi}_{2} x_{i-2} + {\varphi}_{3} x_{i-3} + {\varepsilon}_{i}
      \end{displaymath}
      Autoregressive processes \emph{AR}(n) of order \emph{n} have an exponentially declining ACF and a non-zero PACF up to lag \emph{n},
      <<ar_pacf,echo=2:30,fig.height=8,tidy=FALSE,fig.show='hide'>>=
par(mfrow=c(2,1))  # set plot panels
zoo.ar3 <- zoo(  # AR(3) time series of returns
  x=arima.sim(n=1000, model=list(ar=c(0.1, 0.3, 0.1))),
  order.by=daily.index)  # zoo.ar
# ACF of AR(3) process
my.acf(zoo.ar3, lag.max=10, 
       xlab="", ylab="", main="ACF of AR(3) process")

# PACF of AR(3) process
pacf(zoo.ar3, lag.max=10,
     xlab="", ylab="", main="PACF of AR(3) process")
      @
    \column{0.5\textwidth}
      \vspace{-2em}
      \hspace*{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/ar_pacf}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Fitting Autoregressive Models}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      The function \texttt{arima()} from the base package \texttt{stats} fits a specified ARIMA model to a univariate time series,
      \vskip1ex
      The function \texttt{auto.arima()} from the package \texttt{forecast} automatically fits an ARIMA model to a univariate time series,
    \column{0.6\textwidth}
      \vspace{-1em}
      <<echo=1:30,tidy=FALSE>>=
zoo.ar3 <- arima.sim(n=10000, 
            model=list(ar=c(0.1, 0.3, 0.1)))
arima(zoo.ar3, order = c(5,0,0))  # fit AR(5) model
auto.arima(zoo.ar3)  # fit ARIMA model
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\section{Regression Analysis}


%%%%%%%%%%%%%%%
\subsection{Formula Objects}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      Formulas in $R$ are defined using the "\textasciitilde{}" operator followed by a series of terms separated by the "\texttt{+}" operator,
      \vskip1ex
      Formulas can be defined as separate objects, manipulated, and passed to functions,
      \vskip1ex
      For example the formula "\texttt{z} \textasciitilde{} \texttt{model}" means the response variable \texttt{z} is explained by the \texttt{model},
      \vskip1ex
      The formula "\texttt{z \textasciitilde{} x + y}" represents a linear model: $z = ax  + by + c$,
      \vskip1ex
      The formula "\texttt{y \textasciitilde{} x - 1}" or "\texttt{y \textasciitilde{} x + 0}" represents a linear model with zero intercept: $y = ax$,
    \column{0.6\textwidth}
      \vspace{-1em}
      <<echo=1:30,tidy=FALSE>>=
# linear model with zero intercept
my.form <- z ~ x + y -1
my.form

# formula from text string
my.form <- as.formula(  # coerce text strings to formula
              paste("y ~ ", 
                paste(paste0("x", 1:5), collapse="+")
                )  # end paste
            )  # end as.formula
class(my.form)
my.form
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Simple Regression Example}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.3\textwidth}
      The \emph{null} hypothesis for linear regression is that the regression coefficients are \emph{zero},
      \vskip1ex
      The function \texttt{lm()} from the base package \texttt{stats} fits a linear model (regression) into the data,
      \vskip1ex
      A small \emph{p}-value for a given coefficient means that this coefficient is very likely to be non-zero,
    \column{0.7\textwidth}
      \vspace{-1em}
        <<echo=3:30,tidy=FALSE,fig.show='hide'>>=
# rm(list=ls())
set.seed(1121)  # initialize random number generator
v.xvar <- 0.1*1:30  # independent variable
v.yvar <- 3 + 2*v.xvar + rnorm(30)  # dependent variable plus noise
form.simple <- v.yvar ~ v.xvar  # specify model
lm.simple <- lm(form.simple)  # perform regression
summary(lm.simple)  # regression summary
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\begin{frame}[fragile,t]{Plotting a Regression}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      Objects of class "\texttt{lm}" have their own plot method, designed to plot diagnostic tests,
      \vskip1ex
      Calling \texttt{plot()} and \texttt{abline()} on the regression formula produces a scatterplot with the regression line,
        <<simp_reg,echo=2:30,tidy=FALSE,fig.show='hide'>>=
par(oma=c(1, 1, 1, 1), mgp=c(2, 0.5, 0), mar=c(5, 1, 1, 1), cex.lab=0.8, cex.axis=0.8, cex.main=0.8, cex.sub=0.5)
# plot(lm.simple)  # plot diagnostic tests
plot(form.simple)  # plot regression scatterplot
abline(lm.simple, col="red")  # add reg line
title(main="Simple Regression", line=-1)

# summary data
summary(lm.simple)$coefficients
summary(lm.simple)$r.squared
      @

    \column{0.5\textwidth}
      \vspace{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/simp_reg}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Durbin-Watson Test of Autocorrelation of Regression Residuals}
\begin{frame}[fragile,t]{\subsecname}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      The \emph{Durbin-Watson} test is designed to test the \emph{null hypothesis} that the autocorrelations of regression residuals are equal to zero,
      \vskip1ex
      The test statistic is:
      \begin{displaymath}
        DW = \frac {\sum_{i=2}^{n} (\varepsilon_{i} - \varepsilon_{i-1})^2} {\sum_{i=1}^{n} \varepsilon_{i}^2}
      \end{displaymath}
      Where $\varepsilon_{i}$ are the regression residuals,
      \vskip1ex
      The value of the \emph{Durbin-Watson} statistic \emph{DW} is close to zero for large positive autocorrelations, and close to four for large negative autocorrelations,
      \vskip1ex
      The \emph{DW} is close to two for autocorrelations close to zero,
      \vskip1ex
      The \emph{p}-value for the \texttt{lm.simple} regression is large, and we conclude that the \emph{null hypothesis} is TRUE, and the regression residuals are uncorrelated,
    \column{0.5\textwidth}
      \vspace{-1em}
      <<echo=2:30,tidy=FALSE>>=
# Durbin-Watson test for DAX data
library(lmtest)  # load lmtest
dwtest(lm.simple)
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Homework Assignment}
\begin{frame}[t]{\subsecname}

\begin{block}{Required}
  \begin{itemize}[]
    \item Create a regression function called "\texttt{my.lm()}",
    \item The input is a data frame with the data in columns, and a formula object,
    \item The function should perform a regression by calling the function "\texttt{lm()}",
    \item The function should return a list object with summary information: regression coefficients, \emph{t}-values, \emph{p}-values, \emph{R}-squared, and the results of the Durbin-Watson test,
    \item The function should test for a variety of possible inputs: formula, character, matrix, etc.,
    \item The function should throw an error if the input is not a formula object,
  \end{itemize}
\end{block}
\pause

\begin{block}{Recommended}
  \begin{itemize}[]
    \item \fullcite{website:ggplot2}
    \item \fullcite{website:ggplot2cook}
  \end{itemize}
\end{block}

\end{frame}

\end{document}
